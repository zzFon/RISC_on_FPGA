

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jul 28 17:25:45 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16C56
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	dabs	1,0x1C,4
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16C56 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0005                     _PORTA	set	5
    54  0005                     _TRISA	set	5
    55  0000                     _OPTION	set	0
    56                           
    57                           	psect	cinit
    58  004                     start_initialization:	
    59                           ; #config settings
    60                           
    61  004                     __initialization:
    62  004                     end_of_initialization:	
    63                           ;End of C runtime variable initialization code
    64                           
    65  004                     __end_of__initialization:
    66  004  0064               	clrf	4
    67  005  04A3  0BA7         	ljmp	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMMON
    70  000                     __pcstackCOMMON:
    71  000                     ??_delay:
    72  000                     ??_main:	
    73                           ; 1 bytes @ 0x0
    74                           
    75                           
    76                           	psect	cstackBANK0
    77  007                     __pcstackBANK0:	
    78                           ; 1 bytes @ 0x0
    79                           
    80  007                     ?_delay:
    81  007                     ?_main:	
    82                           ; 1 bytes @ 0x0
    83                           
    84  007                     delay@a:	
    85                           ; 1 bytes @ 0x0
    86                           
    87                           
    88                           ; 2 bytes @ 0x0
    89  007                     	ds	2
    90  009                     delay@b:
    91                           
    92                           ; 2 bytes @ 0x2
    93  009                     	ds	2
    94  00B                     delay@c:
    95                           
    96                           ; 2 bytes @ 0x4
    97  00B                     	ds	2
    98                           
    99                           	psect	maintext
   100  1A7                     __pmaintext:	
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 16 in file "main.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1   19[None  ] void 
   113 ;; Registers used:
   114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : B00/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMMON   BANK0
   120 ;;      Params:         0       0
   121 ;;      Locals:         0       0
   122 ;;      Temps:          0       0
   123 ;;      Totals:         0       0
   124 ;;Total ram usage:        0 bytes
   125 ;; Hardware stack levels required when called:    1
   126 ;; This function calls:
   127 ;;		_delay
   128 ;; This function is called by:
   129 ;;		Startup code after reset
   130 ;; This function uses a non-reentrant model
   131 ;;
   132                           
   133                           
   134                           ;psect for function _main
   135  1A7                     _main:
   136  1A7                     l615:	
   137                           ;incstack = 0
   138                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1+pclath+cstack]
   139                           
   140                           
   141                           ;main.c: 18: OPTION=8;
   142  1A7  0C08               	movlw	8
   143  1A8  0002               	option
   144                           
   145                           ;main.c: 19: TRISA=0;
   146  1A9  0C00               	movlw	0
   147  1AA  0005               	tris	5
   148  1AB                     l617:
   149                           
   150                           ;main.c: 21:    {;main.c: 22:     PORTA = 1;
   151  1AB  0C01               	movlw	1
   152  1AC  0025               	movwf	5	;volatile
   153  1AD                     l619:
   154                           
   155                           ;main.c: 23:     delay();
   156  1AD  04A3  0907  04A3   	fcall	entry__delay
   157  1B0                     l621:
   158                           
   159                           ;main.c: 24:     PORTA = 2;
   160  1B0  0C02               	movlw	2
   161  1B1  0025               	movwf	5	;volatile
   162  1B2                     l623:
   163                           
   164                           ;main.c: 25:     delay();
   165  1B2  04A3  0907  04A3   	fcall	entry__delay
   166  1B5                     l625:
   167                           
   168                           ;main.c: 26:     PORTA = 4;
   169  1B5  0C04               	movlw	4
   170  1B6  0025               	movwf	5	;volatile
   171  1B7                     l627:
   172                           
   173                           ;main.c: 27:     delay();
   174  1B7  04A3  0907  04A3   	fcall	entry__delay
   175  1BA                     l629:
   176                           
   177                           ;main.c: 28:     PORTA = 8;
   178  1BA  0C08               	movlw	8
   179  1BB  0025               	movwf	5	;volatile
   180  1BC                     l631:
   181                           
   182                           ;main.c: 29:     delay();
   183  1BC  04A3  0907  04A3   	fcall	entry__delay
   184  1BF                     l633:
   185                           
   186                           ;main.c: 30:     PORTA = 0;
   187  1BF  0065               	clrf	5	;volatile
   188  1C0                     l635:
   189                           
   190                           ;main.c: 31:     delay();
   191  1C0  04A3  0907  04A3   	fcall	entry__delay
   192  1C3  0BAB               	goto	l617
   193  1C4  04A3  0A02         	ljmp	start
   194  1C6                     __end_of_main:
   195                           
   196                           	psect	text1
   197  1C6                     __ptext1:	
   198 ;; *************** function _delay *****************
   199 ;; Defined at:
   200 ;;		line 9 in file "main.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;  c               2    4[BANK0 ] unsigned int 
   205 ;;  b               2    2[BANK0 ] unsigned int 
   206 ;;  a               2    0[BANK0 ] unsigned int 
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    8[None  ] void 
   209 ;; Registers used:
   210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMMON   BANK0
   216 ;;      Params:         0       0
   217 ;;      Locals:         0       6
   218 ;;      Temps:          0       0
   219 ;;      Totals:         0       6
   220 ;;Total ram usage:        6 bytes
   221 ;; Hardware stack levels used:    1
   222 ;; This function calls:
   223 ;;		Nothing
   224 ;; This function is called by:
   225 ;;		_main
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           
   230                           ;psect for function _delay
   231  1C6                     _delay:
   232  1C6                     l585:
   233                           
   234                           ;main.c: 11:     unsigned int a,b,c;;main.c: 12:  for(a=200;a>0;a--)
   235  1C6  0CC8               	movlw	200
   236  1C7  0027               	movwf	delay@a
   237  1C8  0C00               	movlw	0
   238  1C9  0028               	movwf	delay@a+1
   239  1CA                     l591:
   240                           
   241                           ;main.c: 13:   for(b=110;b>0;b--)
   242  1CA  0C6E               	movlw	110
   243  1CB  0029               	movwf	delay@b
   244  1CC  0C00               	movlw	0
   245  1CD  002A               	movwf	delay@b+1
   246  1CE                     l597:
   247                           
   248                           ;main.c: 14:             for(c=100;c>0;c--);
   249  1CE  0C64               	movlw	100
   250  1CF  002B               	movwf	delay@c
   251  1D0  0C00               	movlw	0
   252  1D1  002C               	movwf	delay@c+1
   253  1D2                     l603:
   254  1D2  0C01               	movlw	1
   255  1D3  003C               	movwf	btemp
   256  1D4  007D               	clrf	btemp+1
   257  1D5  021C               	movf	wtemp0,w
   258  1D6  00AB               	subwf	delay@c,f
   259  1D7  021D               	movf	wtemp0+1,w
   260  1D8  0703               	skipc
   261  1D9  00EC               	decf	delay@c+1,f
   262  1DA  00AC               	subwf	delay@c+1,f
   263  1DB                     l605:
   264  1DB  020B               	movf	delay@c,w
   265  1DC  010C               	iorwf	delay@c+1,w
   266  1DD  0743               	btfss	3,2
   267  1DE  0BE0               	goto	u41
   268  1DF  0BE1               	goto	u40
   269  1E0                     u41:
   270  1E0  0BD2               	goto	l603
   271  1E1                     u40:
   272  1E1                     l607:
   273  1E1  0C01               	movlw	1
   274  1E2  003C               	movwf	btemp
   275  1E3  007D               	clrf	btemp+1
   276  1E4  021C               	movf	wtemp0,w
   277  1E5  00A9               	subwf	delay@b,f
   278  1E6  021D               	movf	wtemp0+1,w
   279  1E7  0703               	skipc
   280  1E8  00EA               	decf	delay@b+1,f
   281  1E9  00AA               	subwf	delay@b+1,f
   282  1EA                     l609:
   283  1EA  0209               	movf	delay@b,w
   284  1EB  010A               	iorwf	delay@b+1,w
   285  1EC  0743               	btfss	3,2
   286  1ED  0BEF               	goto	u51
   287  1EE  0BF0               	goto	u50
   288  1EF                     u51:
   289  1EF  0BCE               	goto	l597
   290  1F0                     u50:
   291  1F0                     l611:
   292  1F0  0C01               	movlw	1
   293  1F1  003C               	movwf	btemp
   294  1F2  007D               	clrf	btemp+1
   295  1F3  021C               	movf	wtemp0,w
   296  1F4  00A7               	subwf	delay@a,f
   297  1F5  021D               	movf	wtemp0+1,w
   298  1F6  0703               	skipc
   299  1F7  00E8               	decf	delay@a+1,f
   300  1F8  00A8               	subwf	delay@a+1,f
   301  1F9                     l613:
   302  1F9  0207               	movf	delay@a,w
   303  1FA  0108               	iorwf	delay@a+1,w
   304  1FB  0743               	btfss	3,2
   305  1FC  0BFE               	goto	u61
   306  1FD  0BFF               	goto	u60
   307  1FE                     u61:
   308  1FE  0BCA               	goto	l591
   309  1FF                     u60:
   310  1FF                     l15:
   311  1FF  0800               	retlw	0
   312  200                     __end_of_delay:
   313  001C                     btemp	set	28	;btemp
   314  001C                     wtemp0	set	28
   315  001E                     wtemp1	set	30
   316  001C                     ttemp0	set	28
   317  001C                     ltemp0	set	28
   318                           
   319                           	psect	jmp_tab
   320  007                     __pjmp_tab:	
   321                           ;incstack = 0
   322                           ; Regs used in _delay: [wreg-fsr0h+status,2-btemp+1]
   323                           
   324  007                     entry__delay:
   325  007  04A3  0BC6         	ljmp	_delay

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            23      6       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_delay

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     6      0     138
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               17      6       6       3       26.1%
ABS                  0      0       0       4        0.0%
BITBANK0            17      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jul 28 17:25:45 2020

                     l15 01FF                       u40 01E1                       u41 01E0  
                     u50 01F0                       u51 01EF                       u60 01FF  
                     u61 01FE                       fsr 0004                      l611 01F0  
                    l603 01D2                      l613 01F9                      l605 01DB  
                    l621 01B0                      l607 01E1                      l631 01BC  
                    l623 01B2                      l615 01A7                      l609 01EA  
                    l633 01BF                      l625 01B5                      l617 01AB  
                    l635 01C0                      l627 01B7                      l619 01AD  
                    l629 01BA                      l591 01CA                      l585 01C6  
                    l597 01CE                     _main 01A7                     btemp 001C  
                   start 0002                    ?_main 0007                    _PORTA 0005  
                  _TRISA 0005                    _delay 01C6                    ltemp0 001C  
                  ttemp0 001C                    status 0003                    wtemp0 001C  
                  wtemp1 001E          __initialization 0004             __end_of_main 01C6  
                 ??_main 0000                   ?_delay 0007                   _OPTION 0000  
            entry__delay 0007                   delay@a 0007                   delay@b 0009  
                 delay@c 000B  __end_of__initialization 0004           __pcstackCOMMON 0000  
          __end_of_delay 0200                  ??_delay 0000               __pmaintext 01A7  
                __ptext1 01C6     end_of_initialization 0004      start_initialization 0004  
              ___latbits 0001            __pcstackBANK0 0007                __pjmp_tab 0007  
         __size_of_delay 003A            __size_of_main 001F  
